# docker-compose.yml

services:
  v1-bot: &v1bot
    build:
      context: ./bots/v1-bot
      dockerfile: Dockerfile
      target: runtime
    env_file:
      - ./bots/v1-bot/.env
    volumes:
      - ./bots/v1-bot/src:/usr/src/app/src
      - ./bots/v1-bot/node_modules:/usr/src/app/node_modules
    environment:
      DEPLOY_ON_STARTUP: ${DEPLOY_ON_STARTUP:-false}
    restart: unless-stopped
    networks:
      - starter-network

  v1-bot-test:
    <<: *v1bot
    build:
      context: ./bots/v1-bot
      dockerfile: Dockerfile
      target: test
    command: sh -c "npm test && tail -f /dev/null"
    environment:
      DEPLOY_ON_STARTUP: 'false'
    restart: 'no'

  postgres_db:
    container_name: postgres_db
    build:
      context: ./database/postgres_db
      dockerfile: Dockerfile
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
      PROFILE: local
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready', '-d', 'postgres']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - starter-network

  pgadmin:
    build:
      context: ./database/pgadmin
      dockerfile: Dockerfile
    ports:
      - '8001:8001'
    depends_on:
      - postgres_db
    networks:
      - starter-network

volumes:
  v1_bot_node_modules:
  postgres-data:

networks:
  starter-network:
    driver: bridge
